{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","helpers/toast.jsx","redux/store.js","components/ContactsForm/ContactsForm.jsx","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactsForm/ContactsForm.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","items","createReducer","state","query","some","contact","toLowerCase","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ContactsForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","className","styles","form","onSubmit","preventDefault","label","input","type","pattern","title","required","onChange","button","getFilter","getFilteredContacts","getContacts","normalizedFilter","includes","ContactList","filteredContacts","useSelector","length","warning","list","map","item","info","onClick","Filter","target","App","theme","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6ec8d9ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3_s7W\",\"input\":\"Filter_input__2exqg\"};","import { createAction } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: nanoid(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst actions = {\n  addContact,\n  deleteContact,\n  changeFilter,\n};\nexport default actions;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\nimport 'react-toastify/dist/ReactToastify.css';\nimport toast from '../../helpers/toast';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    const result = state.some(\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n    );\n    if (result) {\n      toast(payload.name);\n    } else {\n      return [...state, payload];\n    }\n  },\n\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function toastError(query) {\r\n  return toast.error(`${query} is already in contacts!`, {\r\n    position: 'top-right',\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n}\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport styles from './ContactsForm.module.css';\r\n\r\nexport default function ContactsForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(actions.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.label}>\r\n        Number\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button className={styles.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const filter = getFilter(state);\n  const contacts = getContacts(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport { IoTrashBinOutline } from 'react-icons/io5';\r\nimport styles from './ContactsList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n  const handleDelete = id => dispatch(actions.deleteContact(id));\r\n\r\n  return filteredContacts.length === 0 ? (\r\n    <div className={styles.warning}>You have no contacts!</div>\r\n  ) : (\r\n    <ul className={styles.list}>\r\n      {filteredContacts.map(contact => (\r\n        <li key={contact.id} className={styles.item}>\r\n          <span className={styles.info}>\r\n            {contact.name}: {contact.number}\r\n          </span>\r\n          <button\r\n            className={styles.button}\r\n            type=\"button\"\r\n            onClick={() => handleDelete(contact.id)}\r\n          >\r\n            <IoTrashBinOutline /> Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport styles from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactsForm from './components/ContactsForm/ContactsForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n      <ToastContainer autoClose={3000} theme={'colored'} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__3QAJW\",\"label\":\"ContactsForm_label__1SAYc\",\"input\":\"ContactsForm_input__156zx\",\"button\":\"ContactsForm_button__1RQg0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__-oMbJ\",\"item\":\"ContactsList_item__1EQQD\",\"info\":\"ContactsList_info__3z9a-\",\"button\":\"ContactsList_button__2ZJ4p\",\"warning\":\"ContactsList_warning__17QCZ\"};"],"sourceRoot":""}